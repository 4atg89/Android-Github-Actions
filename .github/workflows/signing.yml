name: Build Release App Bundle

on: workflow_dispatch

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Decode Keystore
#        id: decode_keystore
#        uses: timheuer/base64-to-file@v1
#        with:
#          fileName: 'keystore/key-r.jks'
#          encodedString: ${{ secrets.KEYSTORE_FILE }}


  build:
    runs-on: ubuntu-latest
    steps:
      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_FILE }}
        run: |
          TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
          mkdir "${TMP_KEYSTORE_FILE_PATH}"
          echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/key-r.jks

      - uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: build prod
        run: ./gradlew app:bundleRelease
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Build Artifacts
          path: app/build/outputs/

#          1️⃣ Развернуть .aab в .apk
#          sh
#          bundletool build-apks --bundle=app-release.aab --output=app.apks --mode=universal
#
#          2️⃣ Разархивировать .apks
#          sh
#          unzip app.apks -d output_folder
#          После этого в папке output_folder будет universal.apk.
#
#          3️⃣ Установить .apk на эмулятор
#          sh
#          adb install output_folder/universal.apk